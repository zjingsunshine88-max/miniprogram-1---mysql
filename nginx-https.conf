# Nginx HTTPS配置文件
# 保存为: C:\nginx\conf\practice.insightdata.top.conf

# HTTPS配置
server {
    listen 443 ssl http2;
    server_name practice.insightdata.top;
    
    # SSL证书配置
    ssl_certificate C:/certificates/practice.insightdata.top.pem;
    ssl_certificate_key C:/certificates/practice.insightdata.top.key;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 日志配置
    access_log logs/practice.insightdata.top.access.log;
    error_log logs/practice.insightdata.top.error.log;
    
    # API代理配置
    location /api/ {
        proxy_pass http://localhost:3002/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 处理跨域
        add_header Access-Control-Allow-Origin https://practice.insightdata.top always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # 处理预检请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin https://practice.insightdata.top;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials true;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # 健康检查
    location /health {
        proxy_pass http://localhost:3002/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 静态文件代理
    location /uploads/ {
        proxy_pass http://localhost:3002/uploads/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态文件缓存
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 管理后台代理
    location / {
        proxy_pass http://localhost:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root html;
    }
}

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name practice.insightdata.top;
    
    # 日志配置
    access_log logs/practice.insightdata.top.http.access.log;
    error_log logs/practice.insightdata.top.http.error.log;
    
    # 重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

# 防止直接IP访问
server {
    listen 443 ssl http2;
    listen 80;
    server_name 223.93.139.87;
    
    # 使用默认证书（可以是自签名证书）
    ssl_certificate C:/certificates/default.pem;
    ssl_certificate_key C:/certificates/default.key;
    
    # 返回403禁止访问
    return 403;
}
