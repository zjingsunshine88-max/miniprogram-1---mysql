const t=async(t,e={})=>{const s=localStorage.getItem("token");try{const o=await fetch(`https://practice.insightdata.top:8443${t}`,{method:e.method||"GET",headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest",...s&&{Authorization:`Bearer ${s}`},...e.headers},credentials:"include",...e});if(!o.ok){const t=await o.json().catch(()=>({}));throw new Error(t.message||`HTTP ${o.status}: ${o.statusText}`)}const a=await o.json();if(a.code&&200!==a.code)throw new Error(a.message||"请求失败");return a}catch(o){if(o.message.includes("CORS")||o.message.includes("blocked"))throw new Error("跨域请求被阻止，请检查服务器CORS配置");throw o}},e={getList:(e={})=>{const s=new URLSearchParams(e).toString();return t(`/api/question/list?${s}`)},getDetail:e=>t(`/api/question/detail/${e}`),getRandom:(e={})=>{const s=new URLSearchParams(e).toString();return t(`/api/question/random?${s}`)},importQuestions:e=>t("/api/question/import",{method:"POST",body:JSON.stringify({questions:e})}),getStats:()=>t("/api/question/stats")};export{e as q};
